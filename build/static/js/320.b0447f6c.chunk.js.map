{"version":3,"sources":["views/apps/freshlist/house/EditCity.js","views/apps/freshlist/house/EditProductType.js"],"names":["EditCity","city","selected","SelectedSupplierCity","sendDataToParent","useState","setSelectedCity","options","selectedValues","onSelect","selectedOption","console","log","onRemove","removedOption","displayValue","i","selectItem1","EditProductType","props","receiveDataFromChild","data","setState","selectedcities","handlerStatus","e","target","value","Status","changeHandler","name","changeHandlerRole","Role","changeHandler1","status","submitHandler","id","match","params","preventDefault","formdata","FormData","cityid","state","map","ele","append","password","fullname","UserName","GSTIN","B_City","Mobile_no","email","AssignRole","CompanyName","Companytype","Place_of_Supply","B_Street","B_State","B_Country","B_PinCode","S_Street","S_City","S_State","S_Country","S_PinCode","Phone_no","SelectedState","axiosConfig","post","then","response","swal","catch","error","handleMatchaddress","checkbox","Address","StateList","SelectedSCity","CityList","CityList1","setuserList","Selectuser","UserId","City","viewData","rolesList","this","myArray","city_id","split","state_id","res","cities","newdata","filter","includes","selectedValue","err","billing_state","form","shipping_state","billing_city","gstin_no","billing_country","billing_pincode","billing_street","company_name","company_type","role","full_name","mobile","phone_no","place_supply","shipping_city","shipping_country","shipping_pincode","shipping_street","username","get","states","pageparmission","JSON","parse","localStorage","getItem","Userinfo","propertyNames","Object","values","roles","productName","selectedList","selectedItem","length","push","removedItem","Card","Row","className","Col","col-sm-6","render","history","Button","onClick","CardBody","Form","onSubmit","lg","md","FormGroup","Label","Input","required","type","placeholder","onChange","onKeyDown","key","min","maxLength","size","bind","disabled","for","state_title","sm","index","checked","style","height","width","CustomInput","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/320.b0447f6c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nexport const EditCity = ({\r\n  city,\r\n  selected,\r\n  SelectedSupplierCity,\r\n  sendDataToParent,\r\n}) => {\r\n  const [SelectedCity, setSelectedCity] = useState(\"\");\r\n  let citylist = city;\r\n  const onSelect = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedCity(selectedOption);\r\n    sendDataToParent(selectedOption);\r\n    // Implement your onSelect logic here\r\n    // You can update the selectedValues state or perform any other actions\r\n  };\r\n\r\n  const onRemove = (removedOption) => {\r\n    console.log(removedOption);\r\n    setSelectedCity(removedOption);\r\n    sendDataToParent(removedOption);\r\n\r\n    // Implement your onRemove logic here\r\n    // You can update the selectedValues state or perform any other actions\r\n  };\r\n  //   useEffect(() => {\r\n  //   props.Received\r\n  //   }, [SelectedCity])\r\n  return (\r\n    <div>\r\n      <Multiselect\r\n        options={city} // Options to display in the dropdown\r\n        selectedValues={selected || SelectedSupplierCity} // Preselected value to persist in dropdown\r\n        onSelect={onSelect} // Function will trigger on select event\r\n        onRemove={onRemove} // Function will trigger on remove event\r\n        displayValue=\"name\" // Property name to display in the dropdown options\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { EditCity } from \"./EditCity\";\r\n\r\nconst selectItem1 = [];\r\n\r\nconst Selectedarray = [];\r\nexport class EditProductType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Address: \"\",\r\n      fullname: \"\",\r\n      GSTIN: \"\",\r\n      B_City: \"\",\r\n      checkbox: \"\",\r\n      SelectedState: \"\",\r\n      StateList: [],\r\n      SelectedSupplierCity: [],\r\n      SelectedSCity: [],\r\n      CityList: [],\r\n      CityList1: [],\r\n\r\n      S_City: \"\",\r\n      Mobile_no: \"\",\r\n      B_Country: \"\",\r\n      S_Country: \"\",\r\n      Phone_no: \"\",\r\n      Place_of_Supply: \"\",\r\n      B_State: \"\",\r\n      S_State: \"\",\r\n      B_Street: \"\",\r\n      S_Street: \"\",\r\n      B_PinCode: \"\",\r\n      S_PinCode: \"\",\r\n      setuserList: false,\r\n      password: \"\",\r\n      email: \"\",\r\n      status: \"\",\r\n      AssignRole: \"\",\r\n      CompanyName: \"\",\r\n      Companytype: \"\",\r\n      Selectuser: \"\",\r\n      UserName: \"\",\r\n      UserId: \"\",\r\n      City: \"\",\r\n      Role: \"\",\r\n      viewData: [],\r\n      selectedcities: [],\r\n      rolesList: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    await axiosConfig\r\n      .post(\"/usereditview\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        // console.log(response.data.data?.city_id);\r\n        let myArray;\r\n        let newdata;\r\n        if (response.data.data?.city_id) {\r\n          myArray = response.data.data?.city_id.split(\",\");\r\n        }\r\n        console.log(myArray);\r\n        if (this.state.B_Street === this.state.S_Street) {\r\n          this.setState({ checkbox: true });\r\n        }\r\n        const formdata = new FormData();\r\n        formdata.append(\"state_id\", response.data.data?.state_id);\r\n        axiosConfig\r\n          .post(`/getcity`, formdata)\r\n          .then((res) => {\r\n            console.log(res?.data?.cities);\r\n            let newdata = res?.data?.cities?.filter((ele) => {\r\n              // console.log(myArray);\r\n              // console.log(ele?.id);\r\n              if (myArray.includes(ele?.id)) {\r\n                return ele;\r\n              }\r\n            });\r\n            // console.log(newdata);\r\n            this.setState({ SelectedSupplierCity: newdata });\r\n            this.setState({ selectedValue: newdata });\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const data = new FormData();\r\n\r\n        data.append(\"state_id\", response.data.data.billing_state);\r\n        axiosConfig\r\n          .post(`/getcity`, data)\r\n          .then((res) => {\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const form = new FormData();\r\n        form.append(\"state_id\", response.data.data?.shipping_state);\r\n        axiosConfig\r\n          .post(`/getcity`, form)\r\n          .then((res) => {\r\n            this.setState({ CityList1: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        this.setState({\r\n          SelectedState: response.data.data.state_id,\r\n          selectedValue: newdata,\r\n          B_City: response.data.data.billing_city,\r\n          GSTIN: response.data.data.gstin_no,\r\n          B_Country: response.data.data.billing_country,\r\n          B_PinCode: response.data.data.billing_pincode,\r\n          B_State: response.data.data.billing_state,\r\n          B_Street: response.data.data.billing_street,\r\n          CompanyName: response.data.data.company_name,\r\n          Companytype: response.data.data.company_type,\r\n          Role: response.data.data.role,\r\n          AssignRole: response.data.data.role,\r\n          email: response.data.data.email,\r\n          fullname: response.data.data.full_name,\r\n          Mobile_no: response.data.data.mobile,\r\n          Phone_no: response.data.data.phone_no,\r\n          Place_of_Supply: response.data.data.place_supply,\r\n          S_City: response.data.data.shipping_city,\r\n          S_Country: response.data.data.shipping_country,\r\n          S_PinCode: response.data.data.shipping_pincode,\r\n          S_State: response.data.data.shipping_state,\r\n          S_Street: response.data.data.shipping_street,\r\n          UserName: response.data.data.username,\r\n          password: response.data.data.password,\r\n          status: response.data.data.status,\r\n          UserId: response.data.data.id,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    await axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        this.setState({\r\n          StateList: response.data?.states,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n        this.setState({\r\n          productName: propertyNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  receiveDataFromChild = (data) => {\r\n    // Handle the data received from the child component\r\n    // setReceivedData(data);\r\n    console.log(data);\r\n    this.setState({ selectedcities: data });\r\n  };\r\n\r\n  handlerStatus = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandlerRole = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Role: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    let { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    // console.log(this.state.selectedcities);\r\n    let cityid = this.state.selectedcities?.map((ele) => {\r\n      return ele?.id;\r\n    });\r\n    // console.log(cityid);\r\n    // debugger;\r\n    // let uniqueChars = [...new Set(selectItem1)];\r\n    formdata.append(\"id\", id);\r\n    formdata.append(\"password\", this.state.password);\r\n    formdata.append(\"full_name\", this.state.fullname);\r\n    formdata.append(\"username\", this.state.UserName);\r\n    formdata.append(\"gstin_no\", this.state.GSTIN);\r\n    formdata.append(\"city\", this.state.B_City);\r\n    formdata.append(\"mobile\", this.state.Mobile_no);\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"status\", this.state.status);\r\n    formdata.append(\"role\", this.state.AssignRole);\r\n    formdata.append(\"company_name\", this.state.CompanyName);\r\n    formdata.append(\"company_type\", this.state.Companytype);\r\n    formdata.append(\"place_supply\", this.state.Place_of_Supply);\r\n    formdata.append(\"billing_street\", this.state.B_Street);\r\n    formdata.append(\"billing_city\", this.state.B_City);\r\n    formdata.append(\"billing_state\", this.state.B_State);\r\n    formdata.append(\"billing_country\", this.state.B_Country);\r\n    formdata.append(\"billing_pincode\", this.state.B_PinCode);\r\n    formdata.append(\"shipping_street\", this.state.S_Street);\r\n    formdata.append(\"shipping_city\", this.state.S_City);\r\n    formdata.append(\"shipping_state\", this.state.S_State);\r\n    formdata.append(\"shipping_country\", this.state.S_Country);\r\n    formdata.append(\"shipping_pincode\", this.state.S_PinCode);\r\n    formdata.append(\"phone_no\", this.state.Phone_no);\r\n    formdata.append(\"state_id\", this.state.SelectedState);\r\n    formdata.append(\"city_id\", cityid);\r\n\r\n    axiosConfig\r\n      .post(\"/usereditsubmit\", formdata)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // this.setState({EditData:response.data.data})\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   \"/app/freshlist/attribute/productAttributeList\"\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleMatchaddress = (value) => {\r\n    this.setState({ checkbox: value });\r\n    if (value) {\r\n      this.setState({ S_Country: this.state.B_Country });\r\n      this.setState({ S_State: this.state.B_State });\r\n      this.setState({ S_City: this.state.B_City });\r\n      this.setState({ S_Street: this.state.B_Street });\r\n      this.setState({ S_PinCode: this.state.B_PinCode });\r\n    } else {\r\n      this.setState({ S_Country: \"\" });\r\n      this.setState({ S_State: \"\" });\r\n      this.setState({ S_City: \"\" });\r\n      this.setState({ S_Street: \"\" });\r\n      this.setState({ S_PinCode: \"\" });\r\n    }\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n\r\n    console.log(selectedList.length);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  }\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    console.log(selectItem1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit User\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/userlist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <div className=\"container \">\r\n              <h4 className=\"py-2\">\r\n                Selected User Type :-{\" \"}\r\n                {this.state.AssignRole === \"Client\" ? \"Client\" : \"User\"}\r\n              </h4>\r\n              <Row></Row>\r\n            </div>\r\n\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"fullname\"\r\n                        value={this.state.fullname}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Display Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"UserName\"\r\n                        value={this.state.UserName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Mobile Number *</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Mobile_no\"\r\n                        value={this.state.Mobile_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Phone Number </Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Phone_no\"\r\n                        value={this.state.Phone_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Email</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"abcd@gmail.com...\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter CompanyName\"\r\n                        name=\"CompanyName\"\r\n                        value={this.state.CompanyName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Type</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Companytype\"\r\n                        name=\"Companytype\"\r\n                        value={this.state.Companytype}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>GSTIN</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter GSTIN No.\"\r\n                        name=\"GSTIN\"\r\n                        value={this.state.GSTIN}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Place of Supply</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Place_of_Supply\"\r\n                        name=\"Place_of_Supply\"\r\n                        value={this.state.Place_of_Supply}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <label for=\"cars\">Choose State</label>\r\n                      <select\r\n                        name=\"SelectedState\"\r\n                        value={this.state.SelectedState}\r\n                        onChange={(e) => {\r\n                          console.log(e.target.value);\r\n                          const formdata = new FormData();\r\n                          this.setState({ SelectedState: e.target.value });\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              this.setState({ SelectedSupplierCity: \"\" });\r\n                              this.setState({ selectedValue: \"\" });\r\n\r\n                              this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {this.state.StateList &&\r\n                          this.state.StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <label for=\"cars\">Choose City</label>\r\n                    <EditCity\r\n                      city={this.state.CityList}\r\n                      selected={this.state.selectedValue}\r\n                      SelectedSupplierCity={this.state.SelectedSupplierCity}\r\n                      // Received={Received}\r\n                      sendDataToParent={this.receiveDataFromChild}\r\n                    />\r\n                    {/* <Multiselect\r\n                      options={this.state.CityList} // Options to display in the dropdown\r\n                      selectedValues={\r\n                        this.state.selectedValue ||\r\n                        this.state.SelectedSupplierCity\r\n                      } // Preselected value to persist in dropdown\r\n                      onSelect={this.onSelect} // Function will trigger on select event\r\n                      onRemove={this.onRemove} // Function will trigger on remove event\r\n                      displayValue=\"name\" // Property name to display in the dropdown options\r\n                    /> */}\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"mt-4\">Billing Address :</h4>\r\n\r\n                    <Col className=\"py-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_Country\"\r\n                          value={this.state.B_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"B_State\"\r\n                          value={this.state.B_State}\r\n                          onChange={(e) => {\r\n                            console.log(e.target.value);\r\n                            this.setState({ B_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"B_City\"\r\n                            value={this.state.B_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList &&\r\n                              this.state.CityList?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"B_Street\"\r\n                          value={this.state.B_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"B_PinCode\"\r\n                          value={this.state.B_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col lg=\"1\" md=\"1\">\r\n                        <input\r\n                          name=\"check\"\r\n                          checked={\r\n                            this.state.B_Street === this.state.S_Street\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.handleMatchaddress(e.target.checked);\r\n                          }}\r\n                          style={{\r\n                            height: \"15px\",\r\n                            width: \"20px\",\r\n                          }}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <h5> Same as Billing Address </h5>\r\n                      </Col>\r\n                    </Row>\r\n                    <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_Country\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"S_State\"\r\n                          value={this.state.S_State}\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            this.setState({ S_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList1: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"S_City\"\r\n                            value={this.state.S_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList1 &&\r\n                              this.state.CityList1?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"S_Street\"\r\n                          value={this.state.S_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"S_PinCode\"\r\n                          value={this.state.S_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {this.state.setuserList && (\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"AssignRole\"\r\n                        value={this.state.AssignRole}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Admin\">--Select Role--</option>\r\n\r\n                        {this.state.productName &&\r\n                          this.state.productName?.map((value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          ))}\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1 py-2\">\r\n                      <h4>Status</h4>\r\n                    </Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={this.changeHandler1}\r\n                    >\r\n                      <input\r\n                        checked={this.state.status === \"Active\" ? true : false}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        checked={\r\n                          this.state.status === \"Deactive\" ? true : false\r\n                        }\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProductType;\r\n"],"sourceRoot":""}
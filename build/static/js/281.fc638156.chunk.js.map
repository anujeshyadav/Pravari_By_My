{"version":3,"sources":["views/apps/freshlist/accounts/CreateAccount.js"],"names":["selectItem1","CreateAccount","useState","setViewpermisson","setEditpermisson","setCreatepermisson","setDeletepermisson","fullname","setfullname","GSTIN","setGSTIN","StateList","setStateList","CityList","setCityList","SelectedState","setSelectedState","B_City","setB_City","checkbox","setcheckbox","S_City","setS_City","Mobile_no","setMobile_no","B_Country","setB_Country","S_Country","setS_Country","Phone_no","setPhone_no","Place_of_Supply","setPlace_of_Supply","B_State","setB_State","S_State","setS_State","B_Street","setB_Street","S_Street","setS_Street","B_PinCode","setB_PinCode","S_PinCode","setS_PinCode","multiSelect","setmultiSelect","selectedOptions","password","setpassword","email","setemail","status","setstatus","AssignRole","setAssignRole","CompanyName","setCompanyName","Companytype","setCompanytype","UserName","setUserName","productName","setproductName","setCity","navigate","useHistory","useEffect","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","post","then","response","propertyNames","Object","values","data","roles","get","states","catch","error","console","log","className","onSubmit","e","preventDefault","uniqueChars","Set","selectedOption","length","toString","success","push","swal","lg","md","required","type","name","onChange","target","map","index","key","sm","placeholder","onWheel","maxLength","onKeyDown","size","min","numericValue","replace","for","showCheckbox","isObject","options","onSelect","selectedList","selectedItem","i","arr","ele","res","cities","err","onRemove","removedItem","displayValue","state_title","checked","style","height","width","disabled","onFocus","marginRight","Ripple","color"],"mappings":"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","file":"static/js/281.fc638156.chunk.js","sourcesContent":["// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { timers } from \"jquery\";\r\nconst selectItem1 = [];\r\nconst selectstate2 = [];\r\n\r\nconst AllunSelectedCity = [];\r\nconst Selectedarray = [];\r\n\r\nconst CreateAccount = () => {\r\n  // const [Address, setAddress] = useState(\"\");\r\n  const [Viewpermisson, setViewpermisson] = useState(null);\r\n  const [Editpermisson, setEditpermisson] = useState(null);\r\n  const [Createpermisson, setCreatepermisson] = useState(null);\r\n  const [Deletepermisson, setDeletepermisson] = useState(null);\r\n  const [fullname, setfullname] = useState(\"\");\r\n  const [GSTIN, setGSTIN] = useState(\"\");\r\n  const [StateList, setStateList] = useState([]);\r\n  const [CityList, setCityList] = useState([]);\r\n  const [SelectedSCity, setSelectedSCity] = useState([]);\r\n  const [SelectedState, setSelectedState] = useState([]);\r\n  const [B_City, setB_City] = useState(\"\");\r\n  const [checkbox, setcheckbox] = useState(\"\");\r\n  const [S_City, setS_City] = useState(\"\");\r\n  const [Mobile_no, setMobile_no] = useState(\"\");\r\n  const [B_Country, setB_Country] = useState(\"\");\r\n  const [S_Country, setS_Country] = useState(\"\");\r\n  const [Phone_no, setPhone_no] = useState(\"\");\r\n  const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n  const [B_State, setB_State] = useState(\"\");\r\n  const [S_State, setS_State] = useState(\"\");\r\n  const [B_Street, setB_Street] = useState(\"\");\r\n  const [S_Street, setS_Street] = useState(\"\");\r\n  const [B_PinCode, setB_PinCode] = useState(\"\");\r\n  const [S_PinCode, setS_PinCode] = useState(\"\");\r\n  const [setuserList, setsetuserList] = useState(false);\r\n  const [multiSelect, setmultiSelect] = useState([]);\r\n  const [selectedOptions, setselectedOptions] = useState([]);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [status, setstatus] = useState(\"\");\r\n  const [AssignRole, setAssignRole] = useState(\"\");\r\n  const [CompanyName, setCompanyName] = useState(\"\");\r\n  const [Companytype, setCompanytype] = useState(\"\");\r\n  const [Selectuser, setSelectuser] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [productName, setproductName] = useState([]);\r\n  const [City, setCity] = useState(\"\");\r\n  const navigate = useHistory();\r\n\r\n  useEffect(() => {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Create Account\"\r\n    );\r\n    setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n    setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n    setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n    setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig.post(\"/getrolelistdropdown\", formdata).then((response) => {\r\n      // console.log(response);\r\n      const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n      // console.log(propertyNames);\r\n      setproductName(propertyNames);\r\n    });\r\n    // state List\r\n    axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        setStateList(response.data?.states);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    let selectedOption = [...new Set(selectedOptions)];\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append(\"created_by\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"password\", password);\r\n    formdata.append(\"full_name\", fullname);\r\n    formdata.append(\"gstin_no\", GSTIN);\r\n    formdata.append(\"username\", UserName);\r\n    formdata.append(\"city\", B_City);\r\n    formdata.append(\"mobile\", Mobile_no);\r\n    formdata.append(\"email\", email);\r\n    formdata.append(\"status\", status);\r\n    formdata.append(\"role\", AssignRole);\r\n    formdata.append(\"company_name\", CompanyName);\r\n    formdata.append(\"company_type\", Companytype);\r\n    formdata.append(\"place_supply\", Place_of_Supply);\r\n    formdata.append(\"billing_street\", B_Street);\r\n    formdata.append(\"billing_city\", B_City);\r\n    formdata.append(\"billing_state\", B_State);\r\n    formdata.append(\"billing_country\", B_Country);\r\n    formdata.append(\"billing_pincode\", B_PinCode);\r\n    formdata.append(\"shipping_street\", S_Street);\r\n    formdata.append(\"shipping_city\", S_City);\r\n    formdata.append(\"shipping_state\", S_State);\r\n    formdata.append(\"shipping_country\", S_Country);\r\n    formdata.append(\"shipping_pincode\", S_PinCode);\r\n    formdata.append(\"phone_no\", Phone_no);\r\n    if (selectedOption.length > 0) {\r\n      formdata.append(\"state_id\", multiSelect.toString());\r\n    } else {\r\n      formdata.append(\"state_id\", SelectedState);\r\n    }\r\n\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/createuser\", formdata)\r\n      .then((response) => {\r\n        if (response.data?.success) {\r\n          navigate.push(\"/app/freshlist/house/userlist\");\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n          setAssignRole(\"\");\r\n          setstatus(\"\");\r\n          setemail(\"\");\r\n          setCity(\"\");\r\n          setPhone_no(\"\");\r\n          setUserName(\"\");\r\n          setfullname(\"\");\r\n          setpassword(\"\");\r\n          setS_Country(\"\");\r\n          setS_State(\"\");\r\n          setS_City(\"\");\r\n          setS_Street(\"\");\r\n          setS_PinCode(\"\");\r\n        }\r\n        // this.props.history.push(\"/app/freshlist/order/all\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleMatchaddress = (e, value) => {\r\n    setcheckbox(value);\r\n    if (value) {\r\n      setS_Country(B_Country);\r\n      setS_State(B_State);\r\n      setS_City(B_City);\r\n      setS_Street(B_Street);\r\n      setS_PinCode(B_PinCode);\r\n    } else {\r\n      setS_Country(\"\");\r\n      setS_State(\"\");\r\n      setS_City(\"\");\r\n      setS_Street(\"\");\r\n      setS_PinCode(\"\");\r\n    }\r\n  };\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectedOptions.push(selectedList[i].id);\r\n      }\r\n    }\r\n\r\n    let arr = selectedList.map((ele) => ele.id);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n\r\n    let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n    if (uniqueChars.length === 1) {\r\n      let value = uniqueChars[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"state_id\", value);\r\n      axiosConfig\r\n        .post(`/getcity`, formdata)\r\n        .then((res) => {\r\n          setCityList(res?.data?.cities);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setCityList([]);\r\n    }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem) => {\r\n    // debugger;\r\n    // setselectedOptions(\"\");\r\n    // console.log(selectedList);\r\n    // setmultiSelect(selectedList);\r\n\r\n    let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    console.log(removedItem);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add here</h1>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"container \">\r\n            {/* <h4 className=\"py-2\">Select User Type :-</h4> */}\r\n            {/* <Row>\r\n              <Col lg=\"2\" md=\"2\">\r\n                <FormGroup>\r\n                  <h3>\r\n                    Client{\" \"}\r\n                    <span>\r\n                      <Input\r\n                        required\r\n                        className=\"mx-2\"\r\n                        type=\"radio\"\r\n                        name=\"City\"\r\n                        value=\"Client\"\r\n                        onChange={(e) => {\r\n                          this.setState({ setuserList: false });\r\n                          this.setState({ AssignRole: \"Client\" });\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  </h3>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col lg=\"2\" md=\"2\">\r\n                <FormGroup>\r\n                  <h3>\r\n                    User{\" \"}\r\n                    <span>\r\n                      <Input\r\n                        required\r\n                        height=\"21px\"\r\n                        width=\"41px\"\r\n                        className=\"mx-2\"\r\n                        type=\"radio\"\r\n                        name=\"City\"\r\n                        value=\"User\"\r\n                        onChange={(e) => {\r\n                          this.setState({ setuserList: true });\r\n                          this.setState({ AssignRole: \"User\" });\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  </h3>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n          </div>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Select Role*</Label>\r\n                    <CustomInput\r\n                      required\r\n                      id=\"AssignRole\"\r\n                      type=\"select\"\r\n                      name=\"AssignRole\"\r\n                      value={AssignRole}\r\n                      // onChange={changeHandler}\r\n                      onChange={(e) => setAssignRole(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n\r\n                      {productName &&\r\n                        productName?.map((value, index) => (\r\n                          <option key={index} value={value}>\r\n                            {value}\r\n                          </option>\r\n                        ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Name *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"fullname\"\r\n                      value={fullname}\r\n                      onChange={(e) => setfullname(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Display Code *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"UserName\"\r\n                      value={UserName}\r\n                      onChange={(e) => setUserName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number *</Label>\r\n                    <Input\r\n                      required\r\n                      onWheel={(e) => {\r\n                        e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                      }}\r\n                      type=\"text\"\r\n                      maxLength={12}\r\n                      onKeyDown={(e) =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      size={10}\r\n                      min={0}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Mobile_no\"\r\n                      value={Mobile_no}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        // Use regular expression to allow only numbers\r\n                        const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n                        setMobile_no(numericValue);\r\n                      }}\r\n                      // onChange={(e) => setMobile_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"abcd@gmail.com...\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setemail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setpassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Name</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter CompanyName\"\r\n                      name=\"CompanyName\"\r\n                      value={CompanyName}\r\n                      onChange={(e) => setCompanyName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Phone Number </Label>\r\n                    <Input\r\n                      required\r\n                      onWheel={(e) => {\r\n                        e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                      }}\r\n                      type=\"text\"\r\n                      onKeyDown={(e) =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      min={0}\r\n                      maxLength={12}\r\n                      size={10}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Phone_no\"\r\n                      value={Phone_no}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        // Use regular expression to allow only numbers\r\n                        const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n                        setPhone_no(numericValue);\r\n                      }}\r\n                      // onChange={(e) => setPhone_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Type</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Companytype\"\r\n                      name=\"Companytype\"\r\n                      value={Companytype}\r\n                      onChange={(e) => setCompanytype(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>GSTIN</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter GSTIN No.\"\r\n                      name=\"GSTIN\"\r\n                      value={GSTIN}\r\n                      onChange={(e) => setGSTIN(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> State *</Label>\r\n                    {AssignRole === \"supplier\" ? (\r\n                      <>\r\n                        <Multiselect\r\n                          required\r\n                          showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={StateList} // Options to display in the dropdown\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={onSelect1} // Function will trigger on select event\r\n                          onRemove={onRemove1} // Function will trigger on remove event\r\n                          displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={(e) => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            // this.setState({ SelectedState: e.target.value });\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                setCityList(res?.data?.cities);\r\n                                // this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label for=\"cars\">City * </Label>\r\n                  <Multiselect\r\n                    required\r\n                    options={CityList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n                    onSelect={onSelect} // Function will trigger on select event\r\n                    onRemove={onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                  />\r\n                </Col>\r\n\r\n                {AssignRole === \"supplier\" ? (\r\n                  <>\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Place of Supply</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Place_of_Supply\"\r\n                          name=\"Place_of_Supply\"\r\n                          value={Place_of_Supply}\r\n                          onChange={(e) => setPlace_of_Supply(e.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n                  <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"B_Country\"\r\n                        value={B_Country}\r\n                        onChange={(e) => setB_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"B_State\"\r\n                        value={B_State}\r\n                        onChange={(e) => {\r\n                          console.log(e.target.value);\r\n                          setB_State(e.target.value);\r\n                          // this.setState({ B_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"cars\">Choose City</Label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_City\"\r\n                          value={B_City}\r\n                          onChange={(e) => setB_City(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          {CityList &&\r\n                            CityList?.map((value, index) => (\r\n                              <option key={index} value={value?.id}>\r\n                                {value?.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"B_Street\"\r\n                        value={B_Street}\r\n                        onChange={(e) => setB_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        onWheel={(e) => {\r\n                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                        }}\r\n                        type=\"text\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        placeholder=\"Enter PinCode\"\r\n                        name=\"B_PinCode\"\r\n                        value={B_PinCode}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n                          setB_PinCode(numericValue);\r\n                        }}\r\n                        // onChange={(e) => setB_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <hr />\r\n                  <Row>\r\n                    <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Input\r\n                        name=\"check\"\r\n                        onChange={(e) => {\r\n                          handleMatchaddress(e, e.target.checked);\r\n                        }}\r\n                        style={{\r\n                          height: \"15px\",\r\n                          width: \"20px\",\r\n                        }}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n                      <h5> Same as Billing Address </h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_Country\"\r\n                        disabled={checkbox ? true : false}\r\n                        value={S_Country}\r\n                        onChange={(e) => setS_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"S_State\"\r\n                        value={S_State}\r\n                        onChange={(e) => {\r\n                          // console.log(e.target.value);\r\n                          setS_State(e.target.value);\r\n                          // this.setState({ S_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              console.log(res?.data?.cities);\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <select\r\n                        name=\"S_State\"\r\n                        disabled={this.state.checkbox ? true : false}\r\n                        value={this.state.S_State}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                        <option value=\"Maharastra\">Maharastra</option>\r\n                      </select> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label for=\"cars\">Choose City</Label>\r\n\r\n                    <FormGroup>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_City\"\r\n                        value={S_City}\r\n                        onChange={(e) => setS_City(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select City--</option>\r\n                        {CityList &&\r\n                          CityList?.map((value, index) => (\r\n                            <option key={index} value={value?.id}>\r\n                              {value?.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <FormGroup>\r\n                        <select\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_City\"\r\n                          value={this.state.S_City}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          <option value=\"Indore\">Indore</option>\r\n                          <option value=\"Panvel\">Panvel</option>\r\n                          <option value=\"khandwa\">khandwa</option>\r\n                        </select>\r\n                      </FormGroup> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"S_Street\"\r\n                        value={S_Street}\r\n                        onChange={(e) => setS_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        onWheel={(e) => {\r\n                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                        }}\r\n                        onFocus={(e) => {\r\n                          e.preventDefault(); // Prevent the default onFocus behavior\r\n                        }}\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter PinCode\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        name=\"S_PinCode\"\r\n                        value={S_PinCode}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n                          setS_PinCode(numericValue);\r\n                        }}\r\n                        // onChange={(e) => setS_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* {this.state.setuserList && ( */}\r\n              <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => setstatus(e.target.value)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <Label className=\"mt-2  mb-2\"> Select User</Label>\r\n\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"Selectuser\"\r\n                    value={this.state.Selectuser}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"user1\">user 1</option>\r\n                    <option value=\"user2\">user2</option>\r\n                    <option value=\"user2\">UPI</option>\r\n                    <option value=\"user2\">Other</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n              </Row>\r\n              {/* )} */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/apps/freshlist/house/EditProductType.js"],"names":["i","selectItem1","EditProductType","props","handlerStatus","e","console","log","target","value","setState","Status","changeHandler","name","changeHandlerRole","Role","changeHandler1","status","submitHandler","id","match","params","preventDefault","formdata","FormData","uniqueChars","Set","append","state","password","fullname","UserName","GSTIN","B_City","Mobile_no","email","AssignRole","CompanyName","Companytype","Place_of_Supply","B_Street","B_State","B_Country","B_PinCode","S_Street","S_City","S_State","S_Country","S_PinCode","Phone_no","SelectedState","axiosConfig","post","then","response","data","swal","catch","error","handleMatchaddress","checkbox","Address","StateList","SelectedSupplierCity","SelectedSCity","CityList","CityList1","setuserList","Selectuser","UserId","City","viewData","rolesList","this","myArray","city_id","split","state_id","res","cities","newdata","filter","ele","includes","selectedValue","err","billing_state","form","shipping_state","billing_city","gstin_no","billing_country","billing_pincode","billing_street","company_name","company_type","role","full_name","mobile","phone_no","place_supply","shipping_city","shipping_country","shipping_pincode","shipping_street","username","get","states","pageparmission","JSON","parse","localStorage","getItem","Userinfo","propertyNames","Object","values","roles","productName","selectedList","selectedItem","length","push","removedItem","className","col-sm-6","render","history","onClick","onSubmit","lg","md","required","type","placeholder","onChange","onKeyDown","key","min","maxLength","size","bind","disabled","for","map","state_title","options","selectedValues","onSelect","onRemove","displayValue","sm","index","checked","style","height","width","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/320.9e6a9330.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst selectItem1 = [];\r\n\r\nconst Selectedarray = [];\r\nexport class EditProductType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Address: \"\",\r\n      fullname: \"\",\r\n      GSTIN: \"\",\r\n      B_City: \"\",\r\n      checkbox: \"\",\r\n      SelectedState: \"\",\r\n      StateList: [],\r\n      SelectedSupplierCity: [],\r\n      SelectedSCity: [],\r\n\r\n      CityList: [],\r\n      CityList1: [],\r\n\r\n      S_City: \"\",\r\n      Mobile_no: \"\",\r\n      B_Country: \"\",\r\n      S_Country: \"\",\r\n      Phone_no: \"\",\r\n      Place_of_Supply: \"\",\r\n      B_State: \"\",\r\n      S_State: \"\",\r\n      B_Street: \"\",\r\n      S_Street: \"\",\r\n      B_PinCode: \"\",\r\n      S_PinCode: \"\",\r\n      setuserList: false,\r\n      password: \"\",\r\n      email: \"\",\r\n      status: \"\",\r\n      AssignRole: \"\",\r\n      CompanyName: \"\",\r\n      Companytype: \"\",\r\n      Selectuser: \"\",\r\n      UserName: \"\",\r\n      UserId: \"\",\r\n      City: \"\",\r\n      Role: \"\",\r\n      viewData: [],\r\n      rolesList: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    await axiosConfig\r\n      .post(\"/usereditview\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        // console.log(response.data.data?.city_id);\r\n        let myArray;\r\n        let newdata;\r\n        if (response.data.data?.city_id) {\r\n          myArray = response.data.data?.city_id.split(\",\");\r\n        }\r\n        console.log(myArray);\r\n        if (this.state.B_Street === this.state.S_Street) {\r\n          this.setState({ checkbox: true });\r\n        }\r\n        const formdata = new FormData();\r\n        formdata.append(\"state_id\", response.data.data?.state_id);\r\n        debugger;\r\n        axiosConfig\r\n          .post(`/getcity`, formdata)\r\n          .then((res) => {\r\n            console.log(res?.data?.cities);\r\n            let newdata = res?.data?.cities?.filter((ele) => {\r\n              // console.log(myArray);\r\n              // console.log(ele?.id);\r\n              if (myArray.includes(ele?.id)) {\r\n                debugger;\r\n                return ele;\r\n              }\r\n            });\r\n            console.log(newdata);\r\n            this.setState({ SelectedSupplierCity: newdata });\r\n            this.setState({ selectedValue: newdata });\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const data = new FormData();\r\n\r\n        data.append(\"state_id\", response.data.data.billing_state);\r\n        axiosConfig\r\n          .post(`/getcity`, data)\r\n          .then((res) => {\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const form = new FormData();\r\n        form.append(\"state_id\", response.data.data?.shipping_state);\r\n        axiosConfig\r\n          .post(`/getcity`, form)\r\n          .then((res) => {\r\n            this.setState({ CityList1: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        this.setState({\r\n          SelectedState: response.data.data.state_id,\r\n          selectedValue: newdata,\r\n          B_City: response.data.data.billing_city,\r\n          GSTIN: response.data.data.gstin_no,\r\n          B_Country: response.data.data.billing_country,\r\n          B_PinCode: response.data.data.billing_pincode,\r\n          B_State: response.data.data.billing_state,\r\n          B_Street: response.data.data.billing_street,\r\n          CompanyName: response.data.data.company_name,\r\n          Companytype: response.data.data.company_type,\r\n          Role: response.data.data.role,\r\n          AssignRole: response.data.data.role,\r\n          email: response.data.data.email,\r\n          fullname: response.data.data.full_name,\r\n          Mobile_no: response.data.data.mobile,\r\n          Phone_no: response.data.data.phone_no,\r\n          Place_of_Supply: response.data.data.place_supply,\r\n          S_City: response.data.data.shipping_city,\r\n          S_Country: response.data.data.shipping_country,\r\n          S_PinCode: response.data.data.shipping_pincode,\r\n          S_State: response.data.data.shipping_state,\r\n          S_Street: response.data.data.shipping_street,\r\n          UserName: response.data.data.username,\r\n          password: response.data.data.password,\r\n          status: response.data.data.status,\r\n          UserId: response.data.data.id,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    await axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        this.setState({\r\n          StateList: response.data?.states,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n        this.setState({\r\n          productName: propertyNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlerStatus = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandlerRole = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Role: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    let { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    formdata.append(\"id\", id);\r\n    formdata.append(\"password\", this.state.password);\r\n    formdata.append(\"full_name\", this.state.fullname);\r\n    formdata.append(\"username\", this.state.UserName);\r\n    formdata.append(\"gstin_no\", this.state.GSTIN);\r\n    formdata.append(\"city\", this.state.B_City);\r\n    formdata.append(\"mobile\", this.state.Mobile_no);\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"status\", this.state.status);\r\n    formdata.append(\"role\", this.state.AssignRole);\r\n    formdata.append(\"company_name\", this.state.CompanyName);\r\n    formdata.append(\"company_type\", this.state.Companytype);\r\n    formdata.append(\"place_supply\", this.state.Place_of_Supply);\r\n    formdata.append(\"billing_street\", this.state.B_Street);\r\n    formdata.append(\"billing_city\", this.state.B_City);\r\n    formdata.append(\"billing_state\", this.state.B_State);\r\n    formdata.append(\"billing_country\", this.state.B_Country);\r\n    formdata.append(\"billing_pincode\", this.state.B_PinCode);\r\n    formdata.append(\"shipping_street\", this.state.S_Street);\r\n    formdata.append(\"shipping_city\", this.state.S_City);\r\n    formdata.append(\"shipping_state\", this.state.S_State);\r\n    formdata.append(\"shipping_country\", this.state.S_Country);\r\n    formdata.append(\"shipping_pincode\", this.state.S_PinCode);\r\n    formdata.append(\"phone_no\", this.state.Phone_no);\r\n    formdata.append(\"state_id\", this.state.SelectedState);\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/usereditsubmit\", formdata)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // this.setState({EditData:response.data.data})\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   \"/app/freshlist/attribute/productAttributeList\"\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleMatchaddress = (value) => {\r\n    this.setState({ checkbox: value });\r\n    if (value) {\r\n      this.setState({ S_Country: this.state.B_Country });\r\n      this.setState({ S_State: this.state.B_State });\r\n      this.setState({ S_City: this.state.B_City });\r\n      this.setState({ S_Street: this.state.B_Street });\r\n      this.setState({ S_PinCode: this.state.B_PinCode });\r\n    } else {\r\n      this.setState({ S_Country: \"\" });\r\n      this.setState({ S_State: \"\" });\r\n      this.setState({ S_City: \"\" });\r\n      this.setState({ S_Street: \"\" });\r\n      this.setState({ S_PinCode: \"\" });\r\n    }\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n\r\n    console.log(selectedList.length);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  }\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    console.log(selectItem1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit User\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/userlist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <div className=\"container \">\r\n              <h4 className=\"py-2\">\r\n                Selected User Type :-{\" \"}\r\n                {this.state.AssignRole === \"Client\" ? \"Client\" : \"User\"}\r\n              </h4>\r\n              <Row></Row>\r\n            </div>\r\n\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"fullname\"\r\n                        value={this.state.fullname}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Display Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"UserName\"\r\n                        value={this.state.UserName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Mobile Number *</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Mobile_no\"\r\n                        value={this.state.Mobile_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Phone Number </Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Phone_no\"\r\n                        value={this.state.Phone_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Email</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"abcd@gmail.com...\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter CompanyName\"\r\n                        name=\"CompanyName\"\r\n                        value={this.state.CompanyName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Type</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Companytype\"\r\n                        name=\"Companytype\"\r\n                        value={this.state.Companytype}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>GSTIN</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter GSTIN No.\"\r\n                        name=\"GSTIN\"\r\n                        value={this.state.GSTIN}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Place of Supply</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Place_of_Supply\"\r\n                        name=\"Place_of_Supply\"\r\n                        value={this.state.Place_of_Supply}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <label for=\"cars\">Choose State</label>\r\n                      <select\r\n                        name=\"SelectedState\"\r\n                        value={this.state.SelectedState}\r\n                        onChange={(e) => {\r\n                          console.log(e.target.value);\r\n                          const formdata = new FormData();\r\n                          this.setState({ SelectedState: e.target.value });\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then((res) => {\r\n                              console.log(res?.data?.cities);\r\n                              this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {this.state.StateList &&\r\n                          this.state.StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <label for=\"cars\">Choose City</label>\r\n                    <Multiselect\r\n                      options={this.state.CityList} // Options to display in the dropdown\r\n                      selectedValues={\r\n                        this.state.selectedValue ||\r\n                        this.state.SelectedSupplierCity\r\n                      } // Preselected value to persist in dropdown\r\n                      onSelect={this.onSelect} // Function will trigger on select event\r\n                      onRemove={this.onRemove} // Function will trigger on remove event\r\n                      displayValue=\"name\" // Property name to display in the dropdown options\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"mt-4\">Billing Address :</h4>\r\n\r\n                    <Col className=\"py-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_Country\"\r\n                          value={this.state.B_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"B_State\"\r\n                          value={this.state.B_State}\r\n                          onChange={(e) => {\r\n                            console.log(e.target.value);\r\n                            this.setState({ B_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"B_City\"\r\n                            value={this.state.B_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList &&\r\n                              this.state.CityList?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"B_Street\"\r\n                          value={this.state.B_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"B_PinCode\"\r\n                          value={this.state.B_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col lg=\"1\" md=\"1\">\r\n                        <input\r\n                          name=\"check\"\r\n                          checked={\r\n                            this.state.B_Street === this.state.S_Street\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.handleMatchaddress(e.target.checked);\r\n                          }}\r\n                          style={{\r\n                            height: \"15px\",\r\n                            width: \"20px\",\r\n                          }}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <h5> Same as Billing Address </h5>\r\n                      </Col>\r\n                    </Row>\r\n                    <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_Country\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"S_State\"\r\n                          value={this.state.S_State}\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            this.setState({ S_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList1: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"S_City\"\r\n                            value={this.state.S_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList1 &&\r\n                              this.state.CityList1?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"S_Street\"\r\n                          value={this.state.S_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"S_PinCode\"\r\n                          value={this.state.S_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {this.state.setuserList && (\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"AssignRole\"\r\n                        value={this.state.AssignRole}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Admin\">--Select Role--</option>\r\n\r\n                        {this.state.productName &&\r\n                          this.state.productName?.map((value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          ))}\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1 py-2\">\r\n                      <h4>Status</h4>\r\n                    </Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={this.changeHandler1}\r\n                    >\r\n                      <input\r\n                        checked={this.state.status === \"Active\" ? true : false}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        checked={\r\n                          this.state.status === \"Deactive\" ? true : false\r\n                        }\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProductType;\r\n"],"sourceRoot":""}
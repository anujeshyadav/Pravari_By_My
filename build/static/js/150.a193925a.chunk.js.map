{"version":3,"sources":["assets/img/logo/pravarilogonobackground.png","assets/img/svg/google.svg","views/pages/authentication/login/LoginFirebase.js","views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["module","exports","LoginFirebase","state","email","password","remember","handleLogin","e","preventDefault","props","submitLoginWithFireBase","handleRemember","setState","target","checked","Fragment","CardBody","className","Form","action","onSubmit","this","FormGroup","Input","type","placeholder","value","onChange","required","size","Label","color","icon","label","defaultChecked","to","Button","Ripple","onClick","loginWithFB","loginWithTwitter","stroke","loginWithGoogle","src","googleSvg","alt","height","width","loginWithGithub","React","Component","connect","values","auth","login","LoginJWT","loginWithJWT","Login","handlechange","name","loginHandler","fromdata","FormData","append","axiosConfig","post","then","response","console","log","data","success","localStorage","setItem","JSON","stringify","setTimeout","history","push","swal","buttons","ok","text","catch","error","changepassword","formdata","res","ShowOTPScreen","err","HandleSubmitOTP","emailotp","ShowResetPasswordScreen","PasswordRestSubmit","Confirmpassword","resetpassword","Container","Row","Col","sm","xl","lg","md","Card","logo","CardHeader","CardTitle","containerStyle","inputStyle","otp","numInputs","renderSeparator","renderInput","outline","TabContent","activeTab","TabPane","tabId","CheckBoxesVuexy","disabled"],"mappings":"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","file":"static/js/150.a193925a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pravarilogonobackground.9b0ca510.png\";","module.exports = __webpack_public_path__ + \"static/media/google.73cbaa09.svg\";","import React from \"react\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check, Facebook, Twitter, GitHub } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport googleSvg from \"../../../../assets/img/svg/google.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n} from \"../../../../redux/actions/auth/loginActions\";\r\n\r\nclass LoginFirebase extends React.Component {\r\n  state = {\r\n    email: \"demo@demo.com\",\r\n    password: \"demodemo\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.submitLoginWithFireBase(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.remember\r\n    );\r\n  };\r\n\r\n  handleRemember = (e) => {\r\n    this.setState({\r\n      remember: e.target.checked,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n        <div className=\"auth-footer\">\r\n          <div className=\"divider\">\r\n            <div className=\"divider-text\">OR</div>\r\n          </div>\r\n          <div className=\"footer-btn\">\r\n            <Button.Ripple\r\n              className=\"btn-facebook\"\r\n              color=\"\"\r\n              onClick={() => {\r\n                this.props.loginWithFB();\r\n              }}\r\n            >\r\n              <Facebook size={14} />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-twitter\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithTwitter}\r\n            >\r\n              <Twitter size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-google\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGoogle}\r\n            >\r\n              <img src={googleSvg} alt=\"google\" height=\"15\" width=\"15\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-github\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGithub}\r\n            >\r\n              <GitHub size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n})(LoginFirebase);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../../history\";\r\n\r\nclass LoginJWT extends React.Component {\r\n  state = {\r\n    email: \"admin@gmail.com\",\r\n    password: \"12345\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.loginWithJWT(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  CardTitle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n// import classnames from \"classnames\";\r\n// import logo from \"../../../../assets/img/logo/logo.ico\";\r\n// import logo from \"../../../../assets/img/logo/paravilogo.jpeg\";\r\nimport logo from \"../../../../assets/img/logo/pravarilogonobackground.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport { history } from \"../../../../history\";\r\nimport LoginAuth0 from \"./LoginAuth0\";\r\nimport LoginFirebase from \"./LoginFirebase\";\r\nimport LoginJWT from \"./LoginJWT\";\r\nimport { connect } from \"react-redux\";\r\n// import UserContext from \"../../../../context/Context\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { AcroChoiceFlags } from \"pdf-lib\";\r\n\r\nclass Login extends React.Component {\r\n  // static contextType = UserContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      Confirmpassword: \"\",\r\n      emailotp: \"\",\r\n      resetpassword: false,\r\n      ShowOTPScreen: false,\r\n      ShowResetPasswordScreen: false,\r\n      // rowData: {},\r\n    };\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  loginHandler = (e) => {\r\n    e.preventDefault();\r\n    const fromdata = new FormData();\r\n    fromdata.append(\"username\", this.state.email);\r\n    fromdata.append(\"password\", this.state.password);\r\n    // console.log(this.state.email);\r\n    // console.log(this.state.password);\r\n    axiosConfig\r\n      .post(\"/usersign\", fromdata)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let msg = response.data?.success;\r\n        if (msg) {\r\n          localStorage.setItem(\"userData\", JSON.stringify(response.data?.data));\r\n          setTimeout(() => {\r\n            this.props.history.push(\"/dashboard\");\r\n          }, 2000);\r\n          swal(\r\n            \"Sucessfully login\",\r\n            \"You are LoggedIn!\",\r\n\r\n            {\r\n              buttons: {\r\n                ok: { text: \"Ok\", value: \"ok\" },\r\n                // catch: { text: \"Cancel \", value: \"catch\" },\r\n              },\r\n            }\r\n          ).then((value) => {\r\n            switch (value) {\r\n              case \"ok\":\r\n                // window.location.reload();\r\n                break;\r\n              default:\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        let msg = error.response?.data.success;\r\n\r\n        if (!msg) {\r\n          swal(\"Error\", \"Invalid Username or Password\");\r\n        }\r\n        // swal(\"Error!\", \"Invalid! Email or Password \", \"error\");\r\n      });\r\n  };\r\n  changepassword = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\", this.state.email);\r\n    axiosConfig\r\n      .post(\"/forgotpasswordd\", formdata)\r\n      .then((res) => {\r\n        // console.log(res?.data?.success);\r\n        if (res?.data?.success) {\r\n          // this.setState({ resetpassword: false });\r\n          this.setState({ ShowOTPScreen: true });\r\n          swal(\r\n            \"Email has been sent to Your Mail id\",\r\n            \"Please Check and Verify\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  HandleSubmitOTP = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.emailotp);\r\n    console.log(this.state.email);\r\n    let formdata = new FormData();\r\n    formdata.append(\"otp\", this.state.emailotp);\r\n    formdata.append(\"email\", this.state.email);\r\n    axiosConfig\r\n      .post(\"/verify_Forgot_otp\", formdata)\r\n      .then((res) => {\r\n        console.log(res.data?.success);\r\n        if (res.data?.success) {\r\n          swal(\"OTP has been Verified\");\r\n          this.setState({ ShowResetPasswordScreen: true });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"OTP has not been verified\");\r\n      });\r\n  };\r\n  PasswordRestSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.password);\r\n    console.log(this.state.Confirmpassword);\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"password\", this.state.password);\r\n    formdata.append(\"cpassword\", this.state.Confirmpassword);\r\n    axiosConfig\r\n      .post(\"/change_forgot_password\", formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.data.success) {\r\n          swal(\"Your Password Changed Successfully\");\r\n          this.setState({ resetpassword: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-0 justify-content-center\">\r\n          <Col\r\n            sm=\"5\"\r\n            xl=\"5\"\r\n            lg=\"5\"\r\n            md=\"5\"\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n              <Row className=\"m-0\">\r\n                <Col lg=\"12\" md=\"12\" className=\"p-1\">\r\n                  <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                    <div className=\"logo-box text-center p-2\">\r\n                      <img\r\n                        src={logo}\r\n                        alt=\"loginImg\"\r\n                        width=\"100%\"\r\n                        height=\"90px\"\r\n                      />\r\n                    </div>\r\n\r\n                    {this.state.resetpassword ? (\r\n                      <>\r\n                        <CardHeader className=\"pb-1\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-0\">\r\n                              <strong>Email Verification</strong>\r\n                            </h4>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                        <p className=\"px-2 auth-title mb-2\">\r\n                          Welcome , Please Enter details.\r\n                        </p>\r\n\r\n                        {this.state.ShowOTPScreen ? (\r\n                          <>\r\n                            {this.state.ShowResetPasswordScreen ? (\r\n                              <>\r\n                                <Form onSubmit={this.PasswordRestSubmit}>\r\n                                  <Label>Password</Label>\r\n                                  <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                    <Input\r\n                                      type=\"password\"\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password...\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                  </FormGroup>\r\n\r\n                                  <Label>Confirm Password</Label>\r\n                                  <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                    <Input\r\n                                      type=\"password\"\r\n                                      name=\"Confirmpassword\"\r\n                                      placeholder=\"confirm Password\"\r\n                                      value={this.state.Confirmpassword}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                  </FormGroup>\r\n\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <Button.Ripple\r\n                                      color=\"primary\"\r\n                                      type=\"submit\"\r\n                                    >\r\n                                      Submit\r\n                                    </Button.Ripple>\r\n                                  </div>\r\n                                </Form>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Form onSubmit={this.HandleSubmitOTP}>\r\n                                  <p className=\"px-2 auth-title\">Email OTP</p>\r\n                                  <div className=\"d-flex justify-content-center mb-2\">\r\n                                    <OtpInput\r\n                                      containerStyle=\"true inputdata\"\r\n                                      inputStyle=\"true inputdataone\"\r\n                                      className=\"otpinputtype\"\r\n                                      value={this.state.emailotp}\r\n                                      name=\"emailotp\"\r\n                                      onChange={(otp) =>\r\n                                        this.setState({ emailotp: otp })\r\n                                      }\r\n                                      numInputs={6}\r\n                                      renderSeparator={<span>-</span>}\r\n                                      renderInput={(props) => (\r\n                                        <input className=\"inputs\" {...props} />\r\n                                      )}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-center\">\r\n                                    <Button.Ripple\r\n                                      color=\"primary\"\r\n                                      type=\"submit\"\r\n                                    >\r\n                                      Submit\r\n                                    </Button.Ripple>\r\n                                  </div>\r\n                                </Form>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Form onSubmit={this.changepassword}>\r\n                              <Label>Email</Label>\r\n                              <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                <Input\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  placeholder=\"Username\"\r\n                                  value={this.state.email}\r\n                                  onChange={this.handlechange}\r\n                                  // required\r\n                                />\r\n                              </FormGroup>\r\n                              <div className=\"d-flex justify-content-center\">\r\n                                <Button.Ripple color=\"primary\" type=\"submit\">\r\n                                  Submit\r\n                                </Button.Ripple>\r\n                              </div>\r\n                            </Form>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <CardHeader className=\"pb-1\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-0\">\r\n                              <strong>Login</strong>\r\n                            </h4>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                        <p className=\"px-2 auth-title mb-2\">\r\n                          Welcome back, Please login to your account.\r\n                        </p>\r\n                        <Form onSubmit={this.loginHandler}>\r\n                          <Label>UserName/Display code/ Email id</Label>\r\n                          <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              placeholder=\"Enter Details...\"\r\n                              value={this.state.email}\r\n                              onChange={this.handlechange}\r\n                              // required\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <Label>Password</Label>\r\n                          <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                            <Input\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              placeholder=\"Password\"\r\n                              value={this.state.password}\r\n                              onChange={this.handlechange}\r\n                              // required\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              outline\r\n                              onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.setState({ resetpassword: true });\r\n                              }}\r\n                              // onClick={() => {\r\n                              //   history.push(\"/pages/reset-password\");\r\n                              // }}\r\n                            >\r\n                              Forget Password\r\n                            </Button.Ripple>\r\n                            <Button.Ripple color=\"primary\" type=\"submit\">\r\n                              Login\r\n                            </Button.Ripple>\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                              <TabPane tabId=\"1\">\r\n                                <LoginJWT />\r\n                              </TabPane>\r\n                              <TabPane tabId=\"2\">\r\n                                <LoginFirebase />\r\n                              </TabPane>\r\n                            </TabContent>\r\n                          </div>\r\n                        </Form>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}
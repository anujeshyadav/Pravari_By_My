{"version":3,"sources":["views/apps/freshlist/accounts/RoleList.js"],"names":["i","RoleList","state","rowData","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","render","history","size","color","onClick","push","pathname","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","this","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","post","then","response","propertyNames","Object","values","catch","error","selectedData","getSelectedRows","swal","buttons","cancel","text","formData","updateRowData","remove","sm","tag","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","contextType","UserContext"],"mappings":"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","file":"static/js/280.3a42e1db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    rowData: [],\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Role Name\",\r\n        field: \"Name\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* {this.state.Viewpermisson && (\r\n                <BsEye\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"green\"\r\n                  onClick={() =>\r\n                    history.push(\r\n                      `/app/freshlist/account/updateexistingrole/${params.data.id}`\r\n                    )\r\n                  }\r\n                />\r\n              )} */}\r\n\r\n              {this.state.Editpermisson && (\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Edit\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"blue\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: `/app/freshlist/account/editRole/${params?.data}`,\r\n                          data: params,\r\n                        })\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              )}\r\n              {/* {this.state.Deletepermisson && (\r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data.id);\r\n                  }}\r\n                />\r\n              )} */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"Role List\"\r\n    );\r\n\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelist\", formdata)\r\n      .then((response) => {\r\n        // console.log(response.data?.data);\r\n        const propertyNames = Object.values(response.data?.data);\r\n        // console.log(propertyNames);\r\n        this.setState({ rowData: propertyNames });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n      });\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    // console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          const formData = new FormData();\r\n          formData.append(\"user_id\", id);\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.post(`/userdelete`, formData).then((response) => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 className=\"float-left\">Created Role List</h1>\r\n              </Col>\r\n              {/* <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/refundrequest/addRefund\")\r\n                      }\r\n                    >\r\n                      Add Refund\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Hub Name\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Order Id\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n"],"sourceRoot":""}
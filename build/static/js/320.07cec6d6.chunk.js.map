{"version":3,"sources":["views/apps/freshlist/house/EditCity.js","views/apps/freshlist/house/State.js","views/apps/freshlist/house/EditProductType.js"],"names":["EditCity","city","selected","SelectedSupplierCity","sendDataToParent","useState","setSelectedCity","options","selectedValues","onSelect","selectedOption","console","log","onRemove","removedOption","displayValue","State","i","selectItem1","EditProductType","props","receiveDataFromChild","data","setState","selectedcities","receiveDataFromChildstate","selectedStatelist","stateid","map","ele","id","SelectedState","handlerStatus","e","target","value","Status","changeHandler","name","changeHandlerRole","Role","changeHandler1","status","submitHandler","match","params","preventDefault","formdata","FormData","cityid","state","append","password","fullname","UserName","GSTIN","B_City","Mobile_no","email","AssignRole","CompanyName","Companytype","Place_of_Supply","B_Street","B_State","B_Country","B_PinCode","S_Street","S_City","S_State","S_Country","S_PinCode","Phone_no","axiosConfig","post","then","response","swal","catch","error","handleMatchaddress","checkbox","Address","StateList","SelectedSCity","CityList","CityList1","setuserList","Selectuser","UserId","City","viewData","rolesList","this","myArray","selectedState","state_id","split","city_id","res","newdata","cities","filter","includes","selectedValue","err","billing_state","form","shipping_state","billing_city","gstin_no","billing_country","billing_pincode","billing_street","company_name","company_type","role","full_name","mobile","phone_no","place_supply","shipping_city","shipping_country","shipping_pincode","shipping_street","username","get","newstate","states","pageparmission","JSON","parse","localStorage","getItem","Userinfo","propertyNames","Object","values","roles","productName","selectedList","selectedItem","length","push","removedItem","Card","Row","className","Col","col-sm-6","render","history","Button","onClick","CardBody","Form","onSubmit","lg","md","FormGroup","Label","Input","required","type","placeholder","onChange","onWheel","onFocus","onKeyDown","key","min","maxLength","size","numericValue","replace","disabled","for","state_title","sm","index","checked","style","height","width","CustomInput","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/320.07cec6d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nexport const EditCity = ({\r\n  city,\r\n  selected,\r\n  SelectedSupplierCity,\r\n  sendDataToParent,\r\n}) => {\r\n  const [SelectedCity, setSelectedCity] = useState(\"\");\r\n  let citylist = city;\r\n  const onSelect = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedCity(selectedOption);\r\n    sendDataToParent(selectedOption);\r\n    // Implement your onSelect logic here\r\n    // You can update the selectedValues state or perform any other actions\r\n  };\r\n\r\n  const onRemove = (removedOption) => {\r\n    console.log(removedOption);\r\n    setSelectedCity(removedOption);\r\n    sendDataToParent(removedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Multiselect\r\n        options={city} // Options to display in the dropdown\r\n        selectedValues={selected || SelectedSupplierCity} // Preselected value to persist in dropdown\r\n        onSelect={onSelect} // Function will trigger on select event\r\n        onRemove={onRemove} // Function will trigger on remove event\r\n        displayValue=\"name\" // Property name to display in the dropdown options\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nconst State = ({ city, selected, SelectedSupplierCity, sendDataToParent }) => {\r\n  console.log(city);\r\n  console.log(selected);\r\n  console.log(SelectedSupplierCity);\r\n  //   console.log(sendDataToParent);\r\n  const [SelectedCity, setSelectedCity] = useState([]);\r\n  let citylist = city;\r\n  const onSelect = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelectedCity(selectedOption);\r\n    sendDataToParent(selectedOption);\r\n    // Implement your onSelect logic here\r\n    // You can update the selectedValues state or perform any other actions\r\n  };\r\n\r\n  const onRemove = (removedOption) => {\r\n    console.log(removedOption);\r\n    setSelectedCity(removedOption);\r\n    sendDataToParent(removedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Multiselect\r\n        options={city} // Options to display in the dropdown\r\n        selectedValues={selected || SelectedSupplierCity} // Preselected value to persist in dropdown\r\n        onSelect={onSelect} // Function will trigger on select event\r\n        onRemove={onRemove} // Function will trigger on remove event\r\n        displayValue=\"state_title\" // Property name to display in the dropdown options\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default State;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { EditCity } from \"./EditCity\";\r\nimport State from \"./State\";\r\n\r\nconst selectItem1 = [];\r\n\r\nconst Selectedarray = [];\r\nexport class EditProductType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Address: \"\",\r\n      fullname: \"\",\r\n      GSTIN: \"\",\r\n      B_City: \"\",\r\n      checkbox: \"\",\r\n      selectedStatelist: [],\r\n      SelectedState: \"\",\r\n      StateList: [],\r\n      SelectedSupplierCity: [],\r\n      SelectedSCity: [],\r\n      CityList: [],\r\n      CityList1: [],\r\n\r\n      S_City: \"\",\r\n      Mobile_no: \"\",\r\n      B_Country: \"\",\r\n      S_Country: \"\",\r\n      Phone_no: \"\",\r\n      Place_of_Supply: \"\",\r\n      B_State: \"\",\r\n      S_State: \"\",\r\n      B_Street: \"\",\r\n      S_Street: \"\",\r\n      B_PinCode: \"\",\r\n      S_PinCode: \"\",\r\n      setuserList: false,\r\n      password: \"\",\r\n      email: \"\",\r\n      status: \"\",\r\n      AssignRole: \"\",\r\n      CompanyName: \"\",\r\n      Companytype: \"\",\r\n      Selectuser: \"\",\r\n      UserName: \"\",\r\n      UserId: \"\",\r\n      City: \"\",\r\n      Role: \"\",\r\n      viewData: [],\r\n      selectedcities: [],\r\n      rolesList: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    let selectedState;\r\n    await axiosConfig\r\n      .post(\"/usereditview\", data)\r\n      .then((response) => {\r\n        // console.log(response.data.data);\r\n\r\n        // console.log(response.data.data?.state_id);\r\n        selectedState = response.data.data?.state_id?.split(\",\");\r\n        // console.log(selectedState);\r\n        let myArray;\r\n        let newdata;\r\n        if (response.data.data?.city_id) {\r\n          myArray = response.data.data?.city_id.split(\",\");\r\n        }\r\n        // console.log(myArray);\r\n        if (this.state.B_Street === this.state.S_Street) {\r\n          this.setState({ checkbox: true });\r\n        }\r\n        const formdata = new FormData();\r\n        formdata.append(\"state_id\", response.data.data?.state_id);\r\n        axiosConfig\r\n          .post(`/getcity`, formdata)\r\n          .then((res) => {\r\n            // console.log(res?.data?.cities);\r\n            let newdata = res?.data?.cities?.filter((ele) => {\r\n              // console.log(myArray);\r\n              // console.log(ele?.id);\r\n              if (myArray.includes(ele?.id)) {\r\n                return ele;\r\n              }\r\n            });\r\n            // console.log(newdata);\r\n            this.setState({ SelectedSupplierCity: newdata });\r\n            this.setState({ selectedValue: newdata });\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const data = new FormData();\r\n\r\n        data.append(\"state_id\", response.data.data.billing_state);\r\n        axiosConfig\r\n          .post(`/getcity`, data)\r\n          .then((res) => {\r\n            this.setState({ CityList: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        const form = new FormData();\r\n        form.append(\"state_id\", response.data.data?.shipping_state);\r\n        axiosConfig\r\n          .post(`/getcity`, form)\r\n          .then((res) => {\r\n            this.setState({ CityList1: res?.data?.cities });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        this.setState({\r\n          SelectedState: response.data.data.state_id,\r\n          selectedValue: newdata,\r\n          B_City: response.data.data.billing_city,\r\n          GSTIN: response.data.data.gstin_no,\r\n          B_Country: response.data.data.billing_country,\r\n          B_PinCode: response.data.data.billing_pincode,\r\n          B_State: response.data.data.billing_state,\r\n          B_Street: response.data.data.billing_street,\r\n          CompanyName: response.data.data.company_name,\r\n          Companytype: response.data.data.company_type,\r\n          Role: response.data.data.role,\r\n          AssignRole: response.data.data.role,\r\n          email: response.data.data.email,\r\n          fullname: response.data.data.full_name,\r\n          Mobile_no: response.data.data.mobile,\r\n          Phone_no: response.data.data.phone_no,\r\n          Place_of_Supply: response.data.data.place_supply,\r\n          S_City: response.data.data.shipping_city,\r\n          S_Country: response.data.data.shipping_country,\r\n          S_PinCode: response.data.data.shipping_pincode,\r\n          S_State: response.data.data.shipping_state,\r\n          S_Street: response.data.data.shipping_street,\r\n          UserName: response.data.data.username,\r\n          password: response.data.data.password,\r\n          status: response.data.data.status,\r\n          UserId: response.data.data.id,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    await axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        // debugger;\r\n        let newstate = response.data?.states?.filter((ele) => {\r\n          if (selectedState?.includes(ele?.id)) {\r\n            return ele;\r\n          }\r\n        });\r\n        console.log(newstate);\r\n        this.setState({ selectedStatelist: newstate });\r\n        this.setState({\r\n          StateList: response.data?.states,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n        this.setState({\r\n          productName: propertyNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  receiveDataFromChild = (data) => {\r\n    // Handle the data received from the child component\r\n    // setReceivedData(data);\r\n    console.log(data);\r\n    this.setState({ selectedcities: data });\r\n  };\r\n  receiveDataFromChildstate = (data) => {\r\n    // Handle the data received from the child component\r\n    // setReceivedData(data);\r\n    console.log(data);\r\n    this.setState({ selectedStatelist: data });\r\n    let stateid = data?.map((ele) => {\r\n      return ele?.id;\r\n    });\r\n    console.log(stateid);\r\n    this.setState({ SelectedState: stateid });\r\n  };\r\n\r\n  handlerStatus = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandlerRole = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Role: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    let { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    // console.log(this.state.selectedcities);\r\n    let cityid = this.state.selectedcities?.map((ele) => {\r\n      return ele?.id;\r\n    });\r\n\r\n    // let uniqueChars = [...new Set(selectItem1)];\r\n    formdata.append(\"id\", id);\r\n    formdata.append(\"password\", this.state.password);\r\n    formdata.append(\"full_name\", this.state.fullname);\r\n    formdata.append(\"username\", this.state.UserName);\r\n    formdata.append(\"gstin_no\", this.state.GSTIN);\r\n    formdata.append(\"city\", this.state.B_City);\r\n    formdata.append(\"mobile\", this.state.Mobile_no);\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"status\", this.state.status);\r\n    formdata.append(\"role\", this.state.AssignRole);\r\n    formdata.append(\"company_name\", this.state.CompanyName);\r\n    formdata.append(\"company_type\", this.state.Companytype);\r\n    formdata.append(\"place_supply\", this.state.Place_of_Supply);\r\n    formdata.append(\"billing_street\", this.state.B_Street);\r\n    formdata.append(\"billing_city\", this.state.B_City);\r\n    formdata.append(\"billing_state\", this.state.B_State);\r\n    formdata.append(\"billing_country\", this.state.B_Country);\r\n    formdata.append(\"billing_pincode\", this.state.B_PinCode);\r\n    formdata.append(\"shipping_street\", this.state.S_Street);\r\n    formdata.append(\"shipping_city\", this.state.S_City);\r\n    formdata.append(\"shipping_state\", this.state.S_State);\r\n    formdata.append(\"shipping_country\", this.state.S_Country);\r\n    formdata.append(\"shipping_pincode\", this.state.S_PinCode);\r\n    formdata.append(\"phone_no\", this.state.Phone_no);\r\n    formdata.append(\"state_id\", this.state.SelectedState);\r\n    formdata.append(\"city_id\", cityid);\r\n\r\n    axiosConfig\r\n      .post(\"/usereditsubmit\", formdata)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        // this.setState({EditData:response.data.data})\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   \"/app/freshlist/attribute/productAttributeList\"\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleMatchaddress = (value) => {\r\n    this.setState({ checkbox: value });\r\n    if (value) {\r\n      this.setState({ S_Country: this.state.B_Country });\r\n      this.setState({ S_State: this.state.B_State });\r\n      this.setState({ S_City: this.state.B_City });\r\n      this.setState({ S_Street: this.state.B_Street });\r\n      this.setState({ S_PinCode: this.state.B_PinCode });\r\n    } else {\r\n      this.setState({ S_Country: \"\" });\r\n      this.setState({ S_State: \"\" });\r\n      this.setState({ S_City: \"\" });\r\n      this.setState({ S_Street: \"\" });\r\n      this.setState({ S_PinCode: \"\" });\r\n    }\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    // console.log(selectedList);\r\n    // /\r\n    // console.log(selectedList.length);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  }\r\n  onRemove(selectedList, removedItem) {\r\n    // console.log(selectedList);\r\n    // console.log(selectItem1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit User\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/userlist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <div className=\"container \">\r\n              <h4 className=\"py-2\">\r\n                Selected User Type :-{\" \"}\r\n                {this.state.AssignRole && this.state.AssignRole}\r\n                {/* {this.state.AssignRole === \"Client\" ? \"Client\" : \"User\"} */}\r\n              </h4>\r\n              <Row></Row>\r\n            </div>\r\n\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"fullname\"\r\n                        value={this.state.fullname}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Display Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"UserName\"\r\n                        value={this.state.UserName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Mobile Number *</Label>\r\n                      <Input\r\n                        required\r\n                        onWheel={(e) => {\r\n                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                        }}\r\n                        onFocus={(e) => {\r\n                          e.preventDefault(); // Prevent the default onFocus behavior\r\n                        }}\r\n                        type=\"text\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Mobile_no\"\r\n                        value={this.state.Mobile_no}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n                          this.setState({ Mobile_no: numericValue });\r\n                        }}\r\n                        // onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Phone Number </Label>\r\n                      <Input\r\n                        required\r\n                        onWheel={(e) => {\r\n                          e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                        }}\r\n                        onFocus={(e) => {\r\n                          e.preventDefault(); // Prevent the default onFocus behavior\r\n                        }}\r\n                        type=\"text\"\r\n                        onKeyDown={(e) =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Phone_no\"\r\n                        value={this.state.Phone_no}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          // Use regular expression to allow only numbers\r\n                          const numericValue = value.replace(/\\D/g, \"\");\r\n                          this.setState({ Phone_no: numericValue });\r\n                        }}\r\n                        // onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Email</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"abcd@gmail.com...\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter CompanyName\"\r\n                        name=\"CompanyName\"\r\n                        value={this.state.CompanyName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Type</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Companytype\"\r\n                        name=\"Companytype\"\r\n                        value={this.state.Companytype}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>GSTIN</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter GSTIN No.\"\r\n                        name=\"GSTIN\"\r\n                        value={this.state.GSTIN}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  {this.state.AssignRole == \"supplier\" ? (\r\n                    <>\r\n                      <Col lg=\"6\" md=\"6\">\r\n                        <FormGroup>\r\n                          <Label>Place of Supply</Label>\r\n                          <Input\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Place_of_Supply\"\r\n                            name=\"Place_of_Supply\"\r\n                            value={this.state.Place_of_Supply}\r\n                            onChange={this.changeHandler}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose State</label>\r\n\r\n                          <State\r\n                            city={this.state.StateList}\r\n                            selected={this.state.selectedStatelist}\r\n                            SelectedSupplierCity={this.state.selectedStatelist}\r\n                            // Received={Received}\r\n                            sendDataToParent={this.receiveDataFromChildstate}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Col lg=\"6\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose State</label>\r\n                          <select\r\n                            name=\"SelectedState\"\r\n                            value={this.state.SelectedState}\r\n                            onChange={(e) => {\r\n                              // console.log(e.target.value);\r\n                              const formdata = new FormData();\r\n                              this.setState({ SelectedState: e.target.value });\r\n                              formdata.append(\"state_id\", e.target.value);\r\n                              axiosConfig\r\n                                .post(`/getcity`, formdata)\r\n                                .then((res) => {\r\n                                  this.setState({ SelectedSupplierCity: \"\" });\r\n                                  this.setState({ selectedValue: \"\" });\r\n\r\n                                  this.setState({\r\n                                    CityList: res?.data?.cities,\r\n                                  });\r\n                                })\r\n                                .catch((err) => {\r\n                                  console.log(err);\r\n                                });\r\n                            }}\r\n                            // onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select State--</option>\r\n                            {this.state.StateList &&\r\n                              this.state.StateList?.map((ele, i) => (\r\n                                <option key={i} value={ele?.id}>\r\n                                  {ele?.state_title}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <label for=\"cars\">Choose City</label>\r\n                    <EditCity\r\n                      city={this.state.CityList}\r\n                      selected={this.state.selectedValue}\r\n                      SelectedSupplierCity={this.state.SelectedSupplierCity}\r\n                      // Received={Received}\r\n                      sendDataToParent={this.receiveDataFromChild}\r\n                    />\r\n                    {/* <Multiselect\r\n                      options={this.state.CityList} // Options to display in the dropdown\r\n                      selectedValues={\r\n                        this.state.selectedValue ||\r\n                        this.state.SelectedSupplierCity\r\n                      } // Preselected value to persist in dropdown\r\n                      onSelect={this.onSelect} // Function will trigger on select event\r\n                      onRemove={this.onRemove} // Function will trigger on remove event\r\n                      displayValue=\"name\" // Property name to display in the dropdown options\r\n                    /> */}\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"mt-4\">Billing Address :</h4>\r\n\r\n                    <Col className=\"py-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_Country\"\r\n                          value={this.state.B_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"B_State\"\r\n                          value={this.state.B_State}\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            this.setState({ B_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"B_City\"\r\n                            value={this.state.B_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList &&\r\n                              this.state.CityList?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"B_Street\"\r\n                          value={this.state.B_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          onWheel={(e) => {\r\n                            e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                          }}\r\n                          onFocus={(e) => {\r\n                            e.preventDefault(); // Prevent the default onFocus behavior\r\n                          }}\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"B_PinCode\"\r\n                          value={this.state.B_PinCode}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            // Use regular expression to allow only numbers\r\n                            const numericValue = value.replace(/\\D/g, \"\");\r\n                            this.setState({ B_PinCode: numericValue });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col lg=\"1\" md=\"1\">\r\n                        <input\r\n                          name=\"check\"\r\n                          checked={\r\n                            this.state.B_Street === this.state.S_Street\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.handleMatchaddress(e.target.checked);\r\n                          }}\r\n                          style={{\r\n                            height: \"15px\",\r\n                            width: \"20px\",\r\n                          }}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <h5> Same as Billing Address </h5>\r\n                      </Col>\r\n                    </Row>\r\n                    <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_Country\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"S_State\"\r\n                          value={this.state.S_State}\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            this.setState({ S_State: e.target.value });\r\n                            const formdata = new FormData();\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then((res) => {\r\n                                this.setState({ CityList1: res?.data?.cities });\r\n                              })\r\n                              .catch((err) => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {this.state.StateList &&\r\n                            this.state.StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"S_City\"\r\n                            value={this.state.S_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            {this.state.CityList1 &&\r\n                              this.state.CityList1?.map((value, index) => (\r\n                                <option key={index} value={value?.id}>\r\n                                  {value?.name}\r\n                                </option>\r\n                              ))}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"S_Street\"\r\n                          value={this.state.S_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          onWheel={(e) => {\r\n                            e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                          }}\r\n                          onFocus={(e) => {\r\n                            e.preventDefault(); // Prevent the default onFocus behavior\r\n                          }}\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"number\"\r\n                          onKeyDown={(e) =>\r\n                            [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                            e.preventDefault()\r\n                          }\r\n                          min={0}\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"S_PinCode\"\r\n                          value={this.state.S_PinCode}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            // Use regular expression to allow only numbers\r\n                            const numericValue = value.replace(/\\D/g, \"\");\r\n                            this.setState({ S_PinCode: numericValue });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {this.state.setuserList && (\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"AssignRole\"\r\n                        value={this.state.AssignRole}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Admin\">--Select Role--</option>\r\n\r\n                        {this.state.productName &&\r\n                          this.state.productName?.map((value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          ))}\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1 py-2\">\r\n                      <h4>Status</h4>\r\n                    </Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={this.changeHandler1}\r\n                    >\r\n                      <input\r\n                        checked={this.state.status === \"Active\" ? true : false}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        checked={\r\n                          this.state.status === \"Deactive\" ? true : false\r\n                        }\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProductType;\r\n"],"sourceRoot":""}